{"version":3,"sources":["calculator.js"],"names":["limitedEval","a","degrees","lev","calculator","data","console","log","Error","replace","result","override","length","toPrecision","exception","alert","$","window","innerHeight","removeClass","addClass","hasClass","math","config","number","eval","import","ln","parse","simplify","derivative","document","ready","numOfLeft","autoFill","funcName","fom","addOperator","opr","textContent","callback","setTimeout","clearInfo","resize","isRes","getElementById","fade","click","undefined","isNaN","this","res","indexOf","init","substr","addFunc","reset"],"mappings":"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","file":"calculator.js","sourcesContent":["/*jshint esversion: 6*/\n/*High Accuracy Algorithm Supported*/\n/*Scientific Calculation Supported*/\n/*Non-server version*/\n\nmath.config({\n  number: 'BigNumber'\n});\n\nvar limitedEval = math.eval;\n\nfunction ln(a) {\n  return limitedEval(\"log(\" + a + \")/log(e)\");\n}\n\nfunction degrees(a) {\n  return limitedEval(a + \"deg\");\n}\n\nfunction lev(a){\n  return limitedEval(a + \"!\");\n}\n\nmath.import({\n  ln: ln,\n  degrees: degrees,\n  lev: lev\n});// config of mathjs\n\nmath.import({\n  'import':     function () { throw new Error('Function import is disabled') },\n  'createUnit': function () { throw new Error('Function createUnit is disabled') },\n  'eval':       function () { throw new Error('Function eval is disabled') },\n  'parse':      function () { throw new Error('Function parse is disabled') },\n  'simplify':   function () { throw new Error('Function simplify is disabled') },\n  'derivative': function () { throw new Error('Function derivative is disabled') }\n}, {override: true});// To prevent from XSS attack\n\nfunction calculator(data){\n  console.log(\"Calculating: \" + data);\n  if(data == \"INVALID\"){\n    return \"INVALID\";\n  }\n  data = data.replace(/π/g, \"pi\");\n  try{\n    if(data == \"\")\n      return \"\";\n    let result = limitedEval(data);\n    if(result == \"NaN\")\n      throw \"Error!\";\n    if((result + \"\").length >= 17)\n      return result.toPrecision(15) + \"\";\n    else\n      return result + \"\";\n  }\n  catch(exception){\n    alert('What you typed in is not a valid formula, please try again');\n    return \"INVALID\";\n  }\n}\n\nfunction clearInfo(){\n  if($('#info').height() + 600 > window.innerHeight){\n    if($('#info').hasClass('animeIn'))\n      $('#info').removeClass('animeIn').addClass('animeOut');\n  }\n  else{\n    if($('#info').hasClass('animeOut'))\n      $('#info').removeClass('animeOut').addClass('animeIn');\n  }\n}\n\n$(document).ready(function () {\n  clearInfo();\n  $(window).resize(clearInfo);\n  let numOfLeft = 0;\n  let isRes = false;\n  let fom = document.getElementById('equation'), \n    res = document.getElementById('result');\n\n  function init() {\n    numOfLeft = 0;\n  }\n\n  function autoFill(){\n    for(;numOfLeft > 0; --numOfLeft)\n      fom.textContent += \")\";\n  }\n\n  function addFunc(funcName){\n    ++numOfLeft;\n    fom.textContent += funcName + \"(\";\n  }\n\n  function addOperator(opr){\n    fom.textContent += opr;\n  }\n\n  $('#result').addClass('s0').addClass('animation');\n  $('#equation').addClass('s1').addClass('animation');\n\n  function reset(callback) {\n    $('#equation').removeClass('animation').removeClass('s0').addClass('s1');\n    $('#result').removeClass('animation').removeClass('s1').addClass('s0');\n    if (callback != undefined)\n      setTimeout(callback, 50);\n  }\n\n  let fade = function () {\n    $('#equation').removeClass('s1').addClass('animation').addClass('s0');\n    $('#result').removeClass('s0').addClass('animation').addClass('s1');\n  };\n\n  $('.button').click(function () {\n    reset(undefined);\n    if(isNaN(this.textContent)){\n      if(isRes){\n        if(res.textContent == \"INVALID\" || this.textContent == \"Del\" || res.textContent.indexOf(\"Infinity\") != -1)\n          fom.textContent = \"\";\n        else\n          fom.textContent = res.textContent;\n        isRes = false;\n      }\n      switch (this.textContent) {\n        case \"---\":\n          break;\n        case 'CE':\n          fom.textContent = \"\";\n          init();\n          break;\n        case '(':\n          ++numOfLeft;\n          fom.textContent += \"(\";\n          break;\n        case ')':\n          if(numOfLeft > 0){\n            --numOfLeft;\n            fom.textContent += \")\";\n          }\n          break;\n        case 'Del':\n          if(fom.textContent != \"\")\n            fom.textContent = fom.textContent.substr(0, fom.textContent.length - 1);\n          break;\n        case \"n!\":\n          addFunc(\"lev\");\n          break;\n        case \"deg\":\n          addFunc(\"degrees\");\n          break;\n        case \"sin\": case \"cos\": case \"tan\":\n        case \"asin\": case \"acos\": case \"atan\":\n        case \"ln\": case \"log\":\n          addFunc(this.textContent);\n          break;\n        case \"x^y\":\n          addOperator(\"^\");\n          break;\n        case \"π\":\n          fom.textContent += \"π\";\n          break;\n        case \"e\":\n          fom.textContent += \"e\";\n          break;\n        case \"=\":\n          autoFill();\n          init();\n          res.textContent = calculator(fom.textContent);\n          reset(fade);\n          isRes = true;\n          break;\n\n        default:\n          addOperator(this.textContent);\n          break;\n      }\n    }\n    else{\n      if(isRes){\n        fom.textContent = \"\";\n        isRes = false;\n      }\n      fom.textContent += this.textContent;\n    }\n  });\n});"]}