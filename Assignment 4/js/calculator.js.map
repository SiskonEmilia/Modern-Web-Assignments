{"version":3,"sources":["calculator.js"],"names":["limitedEval","a","degrees","lev","calculator","data","console","log","Error","replace","result","override","length","toPrecision","exception","alert","$","document","removeClass","addClass","hasClass","math","config","number","eval","import","ln","parse","simplify","derivative","ready","numOfLeft","res","fom","textContent","addFunc","funcName","isFunc","opr","reset","callback","setTimeout","clearInfo","window","resize","isRes","getElementById","addOperator","fade","click","undefined","isNaN","this","indexOf","init","charAt","substr","autoFill"],"mappings":"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","file":"calculator.js","sourcesContent":["/*jshint esversion: 6*/\n/*High Accuracy Algorithm Supported*/\n/*Scientific Calculation Supported*/\n/*Non-server version*/\n\nmath.config({\n  number: 'BigNumber'\n});\n\nvar limitedEval = math.eval;\n\nfunction ln(a) {\n  return limitedEval(\"log(\" + a + \")/log(e)\");\n}\n\nfunction degrees(a) {\n  return limitedEval(a + \"deg\");\n}\n\nfunction lev(a){\n  return limitedEval(a + \"!\");\n}\n\nmath.import({\n  ln: ln,\n  degrees: degrees,\n  lev: lev\n});// config of mathjs\n\nmath.import({\n  'import':     function () { throw new Error('Function import is disabled') },\n  'createUnit': function () { throw new Error('Function createUnit is disabled') },\n  'eval':       function () { throw new Error('Function eval is disabled') },\n  'parse':      function () { throw new Error('Function parse is disabled') },\n  'simplify':   function () { throw new Error('Function simplify is disabled') },\n  'derivative': function () { throw new Error('Function derivative is disabled') }\n}, {override: true});// To prevent from XSS attack\n\nfunction calculator(data){\n  console.log(\"Calculating: \" + data);\n  if(data == \"INVALID\"){\n    return \"INVALID\";\n  }\n  data = data.replace(/π/g, \"pi\");\n  try{\n    if(data == \"\")\n      return \"\";\n    let result = limitedEval(data);\n    if(result == \"NaN\")\n      throw \"Error!\";\n    if((result + \"\").length >= 17)\n      return result.toPrecision(15) + \"\";\n    else\n      return result + \"\";\n  }\n  catch(exception){\n    alert('What you typed in is not a valid formula, please try again');\n    return \"INVALID\";\n  }\n}\n\nfunction clearInfo(){\n  if($('#info').height()*2 + 600 > document.body.clientHeight){\n    if($('#info').hasClass('animeIn'))\n      $('#info').removeClass('animeIn').addClass('animeOut');\n  }\n  else{\n    if($('#info').hasClass('animeOut'))\n      $('#info').removeClass('animeOut').addClass('animeIn');\n  }\n}\n\n$(document).ready(function () {\n  clearInfo();\n  $(window).resize(clearInfo);\n  let numOfLeft = 0;\n  let isRes = false, isFunc = false;;\n  let fom = document.getElementById('equation'), \n    res = document.getElementById('result');\n\n  function init() {\n    numOfLeft = 0;\n  }\n\n  function autoFill(){\n    for(;numOfLeft > 0; --numOfLeft)\n      fom.textContent += \")\";\n  }\n\n  function addFunc(funcName){\n    ++numOfLeft;\n    if(isFunc)\n      fom.textContent = funcName + \"(\" + fom.textContent;\n    else  fom.textContent += funcName + \"(\";\n  }\n\n  function addOperator(opr){\n    fom.textContent += opr;\n  }\n\n  $('#result').addClass('s0').addClass('animation');\n  $('#equation').addClass('s1').addClass('animation');\n\n  function reset(callback) {\n    $('#equation').removeClass('animation').removeClass('s0').addClass('s1');\n    $('#result').removeClass('animation').removeClass('s1').addClass('s0');\n    if (callback != undefined)\n      setTimeout(callback, 50);\n  }\n\n  let fade = function () {\n    $('#equation').removeClass('s1').addClass('animation').addClass('s0');\n    $('#result').removeClass('s0').addClass('animation').addClass('s1');\n  };\n\n  $('.button').click(function () {\n    reset(undefined);\n    if(isNaN(this.textContent)){\n      if(isRes){\n        if(res.textContent == \"INVALID\" || this.textContent == \"Del\" || res.textContent.indexOf(\"Infinity\") != -1)\n          fom.textContent = \"\";\n        else\n          fom.textContent = res.textContent;\n        isRes = false;\n        isFunc = true;\n      }\n      switch (this.textContent) {\n        case \"---\":\n          break;\n        case 'CE':\n          fom.textContent = \"\";\n          init();\n          isFunc = false;\n          break;\n        case '(':\n          ++numOfLeft;\n          fom.textContent += \"(\";\n          isFunc = false;\n          break;\n        case ')':\n          if(numOfLeft > 0){\n            --numOfLeft;\n            fom.textContent += \")\";\n          }\n          break;\n        case 'Del':\n          if(fom.textContent != \"\"){\n            if(fom.textContent.charAt(fom.textContent.length - 1) == \"(\")\n              --numOfLeft;\n            fom.textContent = fom.textContent.substr(0, fom.textContent.length - 1);}\n          break;\n        case \"n!\":\n          addFunc(\"lev\");\n          break;\n        case \"deg\":\n          addFunc(\"degrees\");\n          break;\n        case \"sin\": case \"cos\": case \"tan\":\n        case \"asin\": case \"acos\": case \"atan\":\n        case \"ln\": case \"log\":\n          addFunc(this.textContent);\n          break;\n        case \"x^y\":\n          addOperator(\"^\");\n          isFunc = false;\n          break;\n        case \"π\":\n          if(isFunc)\n            fom.textContent = \"\";\n          fom.textContent += \"π\";\n          isFunc = false;\n          break;\n        case \"e\":\n          if(isFunc)\n            fom.textContent = \"\";\n          fom.textContent += \"e\";\n          isFunc = false;\n          break;\n        case \"=\":\n          autoFill();\n          init();\n          res.textContent = calculator(fom.textContent);\n          reset(fade);\n          isRes = true;\n          break;\n        case \".\":\n          if(isFunc)\n            fom.textContent = \"\";\n          addOperator(this.textContent);\n          isFunc = false;\n          break;\n        default:\n          addOperator(this.textContent);\n          isFunc = false;\n          break;\n      }\n    }\n    else{\n      if(isRes){\n        fom.textContent = \"\";\n        isRes = false;\n      }\n      isFunc = false;\n      fom.textContent += this.textContent;\n    }\n  });\n});"]}